newServer({address="127.0.0.1:50", useClientSubnet=true, checkType="A", checkType=DNSClass.CHAOS, checkName="www.google.com", mustResolve=false})
newServer({address="[::1]:50", useClientSubnet=true, checkType="AAAA", checkType=DNSClass.CHAOS, checkName="www.google.com", mustResolve=false})

addDNSCryptBind("0.0.0.0:22", "2.dnscrypt-cert.233py.com", "/usr/local/etc/unbound/dns.cert", "/usr/local/etc/unbound/dns.key")
addDNSCryptBind("[::]:22", "2.dnscrypt-cert.233py.com", "/usr/local/etc/unbound/dns.cert", "/usr/local/etc/unbound/dns.key")

addLocal('0.0.0.0:53', { doTCP=true, reusePort=true})
addLocal('[::]:53', { doTCP=true, reusePort=true})

addLocal('0.0.0.0:9090', { doTCP=true, reusePort=true})
addLocal('[::]:9090', { doTCP=true, reusePort=true})

addAction(MaxQPSIPRule(40, 32, 48), DelayAction(300))
addAction(QTypeRule(dnsdist.ANY) ,DropAction())
addAction(QTypeRule(dnsdist.PTR) ,DropAction())

-- Force TCP
addAction(AndRule({NotRule(OrRule({QTypeRule(dnsdist.TXT), QTypeRule(dnsdist.A), QTypeRule(dnsdist.AAAA)})),TCPRule(false)}), TCAction())

setACL({'0.0.0.0/0', '::/0' })

local dbr = dynBlockRulesGroup()
dbr:setQTypeRate(dnsdist.PTR, 5, 10, "Exceeded PTR rate", 60)
dbr:setQTypeRate(dnsdist.TXT, 5, 10, "Exceeded TXT rate", 60)
dbr:setQTypeRate(dnsdist.SOA, 5, 10, "Exceeded SOA rate", 60)
dbr:setQTypeRate(dnsdist.MX, 3, 10, "Exceeded MX rate", 60)
dbr:setQTypeRate(dnsdist.SRV, 3, 10, "Exceeded SRV rate", 60)
dbr:setQTypeRate(dnsdist.NS, 3, 10, "Exceeded PTR rate", 60)
dbr:setQTypeRate(dnsdist.SIG, 3, 10, "Exceeded PTR rate", 60)

function maintenance()
  dbr:apply()
end

setServerPolicy(firstAvailable)
setECSSourcePrefixV4(24)
setECSSourcePrefixV6(56)

